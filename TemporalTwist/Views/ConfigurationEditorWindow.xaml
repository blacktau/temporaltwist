<!--
//   Copyright (c) 2009, Sean Garrett
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the 
//   following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, this list of conditions and 
//      the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and 
//      the following disclaimer in the documentation and/or other materials provided with the distribution.
//    * The names of the contributors may not be used to endorse or promote products derived from this software without 
//      specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
//   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
//   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
//   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
//   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
//   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
//   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
-->
<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="TemporalTwist.Views.ConfigurationEditorWindow"
        Title="Temporal Twist Configuration" 
        Height="496" 
        Width="347" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:ViewHelpers="clr-namespace:TemporalTwist.ViewHelpers" 
        mc:Ignorable="d"
        x:ClassModifier="internal">
    <Window.Resources>
        <ViewHelpers:AvailableTagTypesList x:Key="AvailableTagTypes"/>
        <ViewHelpers:AvailableBitRatesList x:Key="AvailableBitRates"/>
        <ViewHelpers:AvailableSampleRatesList x:Key="AvailableSampleRates"/>
        
        <Style x:Key="TagTypesListStyle" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"></Setter>
            <Setter Property="SelectionMode" Value="Multiple"></Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <CheckBox Focusable="False"
                                              IsChecked="{Binding Path=IsSelected, 
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContentPresenter></ContentPresenter>
                                    </CheckBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="FormatTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="26" />
                    <RowDefinition Height="26" />
                    <RowDefinition Height="26" />
                    <RowDefinition Height="26" />
                    <RowDefinition Height="26" />
                    <RowDefinition Height="90" />
                    <RowDefinition Height="26" />
                    <RowDefinition Height="26" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*" />
                    <ColumnDefinition Width="80*" />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Name:</TextBlock>
                <TextBox Grid.Column="1" Margin="2,2,2,2" Text="{Binding Path=Name}" />
                <TextBlock Grid.Row="1" Margin="2,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Extension:</TextBlock>
                <TextBox Grid.Column="1" Grid.Row="1" Margin="2" Text="{Binding Path=Extension}"/>
                <TextBlock Grid.Row="2" Margin="2,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Final Extension:</TextBlock>
                <TextBox Grid.Column="1" Grid.Row="2" Margin="2" Text="{Binding Path=CustomExtension}"/>
                <TextBlock Grid.Row="3" Margin="2,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Bit Rate:</TextBlock>
                <ComboBox Grid.Column="1" 
                          Grid.Row="3" 
                          Margin="2" 
                          SelectedItem="{Binding Path=BitRate}" 
                          ItemsSource="{Binding Source={StaticResource AvailableBitRates}}"/>
                <TextBlock Grid.Row="4" Margin="2,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Sample Rate:</TextBlock>
                <ComboBox Grid.Column="1" 
                          Grid.Row="4" 
                          Margin="2" 
                          SelectedItem="{Binding Path=SampleRate}"
                          ItemsSource="{Binding Source={StaticResource AvailableSampleRates}}"/>
                <TextBlock Grid.Row="5" Margin="2,0,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="15.96" HorizontalAlignment="Left" Foreground="{DynamicResource TextBrush}">Tag Type:</TextBlock>
                <ListBox Grid.Column="1" 
                         Margin="2" 
                         Grid.Row="5" 
                         ItemsSource="{Binding Source={StaticResource AvailableTagTypes}}" 
                         Style="{StaticResource TagTypesListStyle}" 
                         ViewHelpers:SelectedItemsBinding.Binding="{Binding Path=TagTypes, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"/>
                <TextBlock Grid.Row="6" Margin="2,0,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Split Output:</TextBlock>
                <CheckBox Grid.Column="1"
                          Margin="2"
                          Grid.Row="6"
                          IsChecked="{Binding Path=IsSplitOutputEnabled}"/>
                <TextBlock Grid.Row="7" Margin="2,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="15.96" Foreground="{DynamicResource TextBrush}" >Output Length:</TextBlock>
                <StackPanel Grid.Column="1" Grid.Row="7" Orientation="Horizontal">
                    <TextBox Width="175" Margin="2" Text="{Binding Path=SplitLength}"/>
                    <TextBlock Margin="2" VerticalAlignment="Center">minutes</TextBlock>
                </StackPanel>

            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="FormatEditorTemplate">
            <StackPanel>
                <ListBox Height="100" 
                         ItemsSource="{Binding Path=Formats}" 
                         DisplayMemberPath="Name" 
                         SelectionMode="Single"
                         SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
                         >
                </ListBox>
                <ContentControl Content="{Binding Path=SelectedItem}"
                                ContentTemplate="{StaticResource FormatTemplate}"
                                />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,5,0">
                    <Button Margin="2,2,2,2" Command="{Binding Path=NewCommand}">
						<TextBlock Margin="5,1,5,2">New</TextBlock>
					</Button>
                    <Button Margin="2,2,2,2" Command="{Binding Path=SaveCommand}">
						<TextBlock Margin="5,1,5,2">Save</TextBlock>
					</Button>
                    <Button Margin="2,2,2,2" Command="{Binding Path=CancelCommand}">
						<TextBlock Margin="5,1,5,2">Cancel</TextBlock>
					</Button>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Bottom">
            <Button Margin="2,2,2,2" Command="{Binding Path=CloseCommand}" >
				<TextBlock Margin="5,1,5,2">Close</TextBlock>
			</Button>
        </StackPanel>
        <TabControl DockPanel.Dock="Top">
            <TabItem Header="Formats">
                <ContentControl Content="{Binding Path=FormatEditorViewModel}"
                                ContentTemplate="{StaticResource FormatEditorTemplate}"
                                />
            </TabItem>
            <TabItem Header="Update Checking">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Margin="2,2,2,2" Foreground="{DynamicResource TextBrush}">Current Version:</TextBlock>
                        <TextBlock Text="{Binding Path=CurrentVersion}" Margin="10,2,2,2" Foreground="{DynamicResource TextBrush}"/>
                    </StackPanel>
                    <CheckBox IsChecked="{Binding Path=UpdateCheckAtStartup}" Margin="2">Check for new version at startup</CheckBox>
                    <Button Command="{Binding Path=UpdateCheckCommand}" Margin="2">
                        <TextBlock Margin="5,2,5,2">Check For Updates Now</TextBlock>
                    </Button>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
